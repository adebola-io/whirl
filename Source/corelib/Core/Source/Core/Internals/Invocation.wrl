module Invocation;

use Package.Core.{
    Process.Halt,
    Internals.Never,
    Prelude.Range,
};

/// List of variants that can be called with `Invoke()`.
public enum Invocation {
    // Strings.
    StrAdd(String, String),
    StrAt(String, Int),
    StrAppend(String, String),
    StrBytes(String),
    StrClear(String),
    StrContains(String, String),
    StrLength(String),
    StrPad(String, UnsignedInt),
    StrPadLeft(String, UnsignedInt),
    StrPadRight(String, UnsignedInt),
    StrPadInPlace(String, UnsignedInt),
    StrPrepend(String, String),
    StrRepeat(String, UnsignedInt),
    StrReplace(String, String, String),
    StrReverse(String),
    StrSlice(String, Range<Int>),
    StrSplit(String, String),
    StrLowercase(String),
    StrCapitalCase(String),
    StrSentenceCase(String),
    StrUppercase(String),
    StrTrim(String),
    StrTrimInPlace(String),
    StrTrimStart(String),
    StrTrimEnd(String),
}

/// Compile time function to call underlying dynamic libraries.
public function Invoke(command: Invocation): Never {
    return Halt("Compiler Built in.");
}