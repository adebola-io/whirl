{
  "Implements Keyword": {
    "prefix": "imp",
    "body": "implements "
  },
  "Model Definition": {
    "prefix": "model",
    "isFileTemplate": true,
    "body": [
      "model ${1:name} {",
      "\tnew(${2:parameters}) {",
      "\t\t$0",
      "\t}",
      "}"
    ],
    "description": "Model Definition"
  },
  "Public Function Definition": {
    "prefix": "public func",
    "body": ["/// $2", "public function ${1:name}() {", "\t$0", "}"],
    "description": "Public Function Definition"
  },
  "Use Statement": {
    "prefix": "use ",
    "body": ["use $0"],
    "description": "Use external module"
  },
  "Fatal": {
    "prefix": "fatal",
    "body": ["fatal(some(\"$1\"))", "$0"],
    "description": "fatal expression"
  },
  "For-In Loop": {
    "prefix": "for",
    "body": [
      "for ${1:element} in ${2:iterator} {",
      "\t$TM_SELECTED_TEXT$0",
      "}"
    ],
    "description": "For-In Loop"
  },
  "Function Statement": {
    "prefix": "func",
    "body": [
      "function ${1:name}(${2:params}:${3:Paramtype}) {",
      "\t$TM_SELECTED_TEXT$0",
      "}"
    ],
    "description": "Function Statement"
  },
  "If Expression": {
    "prefix": "if",
    "body": ["if ${1:condition} {", "\t$TM_SELECTED_TEXT$0", "}"],
    "description": "If Expression"
  },
  "If-Else Statement": {
    "prefix": "ifelse",
    "body": [
      "if ${1:condition} {",
      "\t$TM_SELECTED_TEXT$0",
      "} else {",
      "\t",
      "}"
    ],
    "description": "If-Else Expression"
  },
  "Return Statement": {
    "prefix": "ret",
    "body": "return ${1}"
  },
  "Variable Declaration": {
    "prefix": "var ",
    "body": "var ${1:name} = ${2:value}"
  },
  "While Statement": {
    "prefix": "while",
    "body": ["while ${1:condition} {", "\t$TM_SELECTED_TEXT$0", "}"],
    "description": "While Statement"
  },
  "Async Function Statement": {
    "prefix": "async func",
    "body": [
      "async function ${1:name}(${2:params}:${3:type}) {",
      "\t$TM_SELECTED_TEXT$0",
      "}"
    ],
    "description": "Async Function Statement"
  },
  "Async Function Expression": {
    "prefix": "async fn exp",
    "body": [
      "async fn (${1:params}:${2:type}) {",
      "\t$TM_SELECTED_TEXT$0",
      "}"
    ],
    "description": "Async Function Expression"
  }
}
