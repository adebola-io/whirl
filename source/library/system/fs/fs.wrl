module fs

// use core.prelude.string
// use core.prelude.{todo, boolean}
// use core.prelude.Outcome



// // public type PathLike = string | Buffer | Url
// public type FileHandle = i32

// public model File {
//     public async function open {

//     }
//     public async function close {
        
//     }
// }

// public model FsError {

// }

// /// Opens a file.
// public async function open(filepath: PathLike) -> Outcome<File, FsError> {
//     return todo()
// }


// /// Closes an open file.
// public async function close(handle: FileHandle) -> Outcome<boolean, FsError> {
//     return todo()
// }

// // /// Reads a file, given its filename, and returns its contents.
// // public async function readFile(filename: PathLike) -> Outcome<Buffer, FsError> {
// //     todo()
// //     // return Err("")
// // }

// public async function readToString(filename: PathLike) -> Outcome<string, FsError> {
//     todo()
// }