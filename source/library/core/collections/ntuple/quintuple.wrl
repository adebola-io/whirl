module quintuple

use core.maybe.some
use core.string.{Display, String}
use ntuple.NTuple


/// A set containing five individual items.
public model Quintuple<T, U, V, W, X> 
    implements Display|=(
            T implements Display
            and U implements Display 
            and V implements Display
            and W implements Display
            and X implements Display
        ) + NTuple<T, U, V, W, X>
{
    public var a: T
    public var b: U
    public var c: V
    public var d: W
    public var e: X

    new(first: T, second: U, third: V, fourth: W, fifth: X) {
        this.a = first
        this.b = second
        this.c = third
        this.d = fourth
        this.e = fifth
    }

    public function [Display.toString]|=(
            T implements Display 
            and U implements Display
            and V implements Display
            and W implements Display
            and X implements Display
        ) -> String
    {
        return String.fmt("Quintuple(%, %, %, %, %)")
            .add(this.a.toString())
            .add(this.b.toString())
            .add(this.c.toString())
            .add(this.d.toString())
            .add(this.e.toString())
            .finish()
    }

    public function [NTuple.first] -> ?T {
        return some(this.a)
    }
    public function [NTuple.second] -> ?U {
        return some(this.b)
    }
    public function [NTuple.third] -> ?V {
        return some(this.c)
    }
    public function [NTuple.fourth] -> ?W {
        return some(this.d)
    }
    public function [NTuple.fifth] -> ?X {
        return some(this.e)
    }
}