module terminal;

use core.prelude.Display;
use core.primitives.{String, UInt8};
use core.internals.builtin;
use core.process.todo;


/// Prints a message or an object to the console, terminal 
/// or any predefined output interface.
public function print<T implements Display>(data: T) {
    dataStr := data.toStr();
    builtin.print(dataStr);
}

/// Displays an optional message to the console, terminal or
/// any predefined input interface, prompting the user to enter
/// text.
public function prompt(message?: String) -> String {
    todo()
}

/// Prints a message or an object to the console, terminal, 
/// or any predefined output interface.
public function printFmt<T implements Display>(data: T) {
    dataStr := data.toFmtStr();
    builtin.print(dataStr)
}

/// A string that may have custom colors and styles applied to it.
public model TerminalString implements Display {
    var text: String;
    var codes: []UInt8;

    public function blue() -> This {
        todo()
    }

    function [Display.toStr]() -> String {
        todo()
    }
}