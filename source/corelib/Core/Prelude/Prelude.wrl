/// ## The Whirlwind Prelude
/// 
/// The `prelude` module is a core module that exposes a set of fundamental types, functions and models,
/// automatically available in the global namespace of every other module.
/// 
/// These functionalities are considered essential for writing clear, efficient code, and would be tedious
/// to import again and again into other modules. The `Prelude` reduces boilerplate by predefining these values,
/// increasing code readability, consistency and productivity.
module prelude;

public use core;
public use interfaces.{
    default.Default, display.Display, 
    iteration,
    iteration.{Iteratable, AsIterator, flatten}, 
    guaranteed.Guaranteed, try.Try
};
public use outcome.{ok, err, Outcome};
public use maybe.{none, some, Maybe};
public use range.Range;
public use core.{
    io.print,
    concurrent.{Eventual, Prospect, toSync},
    primitives.{
        String, Array, Number, Int, Float, UnsignedInt,
        UInt, Bool, UInt8, UInt16, UInt32, UInt64, Chars
    },
    process.{todo, fatal},
    internals.never,
    collections.{Tuple, pair}
};