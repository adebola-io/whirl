module Range;

use Core.Prelude.Iteratable;
use Core.Prelude.{Maybe, None, Some};
use Core.Primitives.Ops.Sequenced;

public model Range<T implements Sequenced> implements Iteratable<T> {
    public var start: T;
    public var end: T;

    public function [Iteratable.Next](): ?T {
        // this.start = this.start.NextItem().Unwrap();
        if this.start == this.end {
            None()
        } else {
            Some(this.start)
        }
    }
}