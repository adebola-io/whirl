module fs;

use core.prelude.String;
use core.prelude.{todo, Bool};
use core.prelude.Outcome;
use core.memory.Buffer;
use core.primitives.UnsignedInt;
use core.net.Url;

public type PathLike = String | Buffer | Url;
public type FileHandle = UnsignedInt;

public model File {
    public async function open() {

    }
    public async function close() {
        
    }
}

public model FsError {

}

/// Opens a file.
public async function open(filepath: PathLike): Outcome<File, FsError> {
    return todo();
}


/// Closes an open file.
public async function close(handle: FileHandle): Outcome<Bool, FsError> {
    return todo();
}

/// Reads a file, given its filename, and returns its contents.
public async function readFile(filename: PathLike): Outcome<Buffer, FsError> {
    todo()
    // return Err("");
}