module Process;

use Super.{
    Internals.never, 
    Primitives.String
};

public model Error {
    new(message?: String) {

    }
}

/// Mock function for panicking.
public function PanicOnCaller(message: String): never  {
    // Compiler built-in.
    return PanicOnCaller(message);
}

/// Mock function for compile-time stuff.
public function Halt(message: String): never {
    return Halt(message);
}

/// Indicates that the current piece of code is unfinished.
/// 
/// Developers can use this function as a temporary marker for incomplete work.
/// It is also useful for satisfying the type system when implementing other functionality.
/// ## Panic
/// This function will *always* panic.
/// ## Usage
/// ```
/// ```
public function Todo(message?: String): never {
    return PanicOnCaller(message.UnwrapOr("Entered unfinished code."));
}

/// Panic is used to create and throw an exception.
/// ## Panic
/// This function will *always* panic.
/// ## Usage
/// ```
/// 
/// ```
public function Panic(message?: String): never {
    return Halt("Compiler built in.");
}