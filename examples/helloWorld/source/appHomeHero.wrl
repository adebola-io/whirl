module appHomeHero

use components.button
use tangent.{
    box, text, lineBreak, createStyle, ClickEvent, Color, Direction, FontWeight,
    FontFamily, Position, Preset, Size, Overflow, StyleList, View
}

public function appHomeHero -> View {
    message := `Good day, traveler! My name is Sefunmi, and I am a dedicated programmer
    with a solid background in software developmen Over the years, I've
    honed my skills in crafting efficient and elegant solutions to complex
    problems.`
    
    return (
        box('hero')
            .apply(heroStyles)
            .appendAll([
                box('hero.overlay').apply(overlayStyles),
                box('hero.heading')
                    .preset(Preset.Heading)
                    .apply(headingStyles)
                    .appendAll([
                        text('Build A world, '),
                        lineBreak(),
                        text('bit by bit')
                    ]),
                text(message).apply(paragraphStyles),
                box('hero.buttonRow')
                    .appendAll([
                        button('buttonRow.viewWorksBtn')
                            .apply(viewButtonStyles)
                            .append(text('View Works').linkTo('/works')),
                        button('buttonRow.resumeBtn')
                            .apply(resumeButtonStyles)
                            .onClick(downloadResume)
                            .append(text('Download Resume'))
                    ])
            ])
    )
}

// EVENT HANDLERS
function downloadResume(event: ClickEvent, view: View) {
    // do download stuff.
}
    


// STYLES
function overlayStyles -> StyleList {
    createStyle()
        .position(Position.Absolute)
        .size(Size.Screen)
        .backgroundColor(Color.Green)
}

function heroStyles -> StyleList {
    createStyle()
        .overflow(Overflow.Hidden)
        .width(Size.Screen)
        .height(Size.Variable('sectionHeight'))
        .paddingInline(Size.Variable('screenPadding'))
        .gap(Size.Vh(1.65))
}

function headingStyles -> StyleList {
    createStyle()
        .contentDirection(Direction.Vertical)
        .fontSize(Size.Points(29))
        .fontWeight(FontWeight.Bold)
        .fontFamily(FontFamily.Custom(['Syncopate']))
}

function buttonStyles -> StyleList {
    createStyle()
        .paddingInline(Size.Vw(13.333))
        .paddingBlock(Size.Vh(1.677))
        .gap(Size.Pixels(7))
}

function paragraphStyles -> StyleList {
    createStyle().width(Size.Percent(95))
}

function viewButtonStyles -> StyleList {
    buttonStyles()
        .backgroundcolor(Color.Custom('#037989'))
        .textColor(Color.White)
        .borderColor(Color.Variable('nectarEagleGreen'))
}

function resumeButtonStyles -> StyleList {
    buttonStyles()
        .backgroundColor(Color.White)
        .textColor(Color.Custom('#002139'))
        .borderColor(Color.Custom('#002139'))
}