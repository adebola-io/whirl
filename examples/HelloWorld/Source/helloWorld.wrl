module helloWorld;

/// A function that prints "Hello, world" to the terminal.
function helloWorld {
    print("Hello, world!")
}

/// Greets a person.
function greeting(name: String) {
    print(String.fmt("Good day, %!").add(name))
}

/// Stub for print, since system.io is not ready.
function print<M implements Display>(message: M) {
    todo()
}

/// A function that calculates the factorial of a given number.
function factorial(n: Number) -> Number {
    if n == 1 or n == 0 { return 1 }
    else n * factorial(n - 1)
}

enum Operation {
    Add,
    Subtract,
    Minus,
    Divide
}
/// A simple calculator in Whirlwind.
function calculator(operation: Operation, a: Number, b: Number) -> Number {
    if operation == Operation.Add {
        a + b
    } else if operation == Operation.Subtract {
        a - b
    } else if operation == Operation.Minus {
        a * b
    } else {
        a / b
    };
    todo()
}

/// A function that returns true if a string is a palindrome.
function isPalindrome(str: String) -> Bool {
    return str == str.reverse()
}

var evenSquares = 
    fn(numbers: []Int) 
        numbers
            .iter()
            .filter(fn(num) num % 2 == 0)
            .map(fn(num) num ^ 2)
            .collect()


/// Returns the nth Fibonacci number.
function fibonacci(n: Number) -> Number {
    if n == 0 { return 0 } 
    if n == 1 { return 1 } 
    return fibonacci(n - 1) + fibonacci(n - 2)
}

/// Extracts the last names from a list.
public function lastNames(names: []String) -> []String {
   names.iter().filterMap(fn(name) name.split(' ').at(-1)).collect()
}


model DbError {}


