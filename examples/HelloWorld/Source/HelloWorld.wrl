module helloWorld;

/// A function that prints "Hello, world" to the terminal.
function helloWorld() {
    print("Hello, world!");
}

/// A function that calculates the factorial of a given number.
function factorial(n: Number): Number {
    if n == 1 or n == 0 { 1 } else n * factorial(n - 1)
}

/// A function that returns true if a string is a palindrome.
var IsPalindrome = fn(str: String) str == str.reverse();
// var EvenSquares = fn(numbers: []Number) numbers.Iter().Filter(fn(num) num % 2 == 0).Map(fn(num) num ^ 2);

/// Returns the nth Fibonacci number.
function fibonacci(n: Number): Number {
    if n == 0 {0} 
    else if n == 1 {1} 
    else fibonacci(n-1) + fibonacci(n-2)
}

use core.io.IoError;
use core.fs;
/// Function to display content from a file.
function readToString(path: fs.PathLike): Outcome<String, IoError> {
    return todo();
}

use core.net.http.HttpServer;
/// Server that returns hello world.
function helloWorldServer() {
    app := new HttpServer("new-server", 8080);
    app.get("/", async fn(request) {
        ok(request.respond().html("<h1>Hello, world!</h1>"))
    });
    app.start().run().await();
}
