/// From https://github.com/aerogo/aero/blob/master/Configuration.go
module config;

use core.time.{Duration, Millisecond, Second};
use core.fs;

/// Configuration represents the data in your config.json file.
public model Configuration {
    public var push:        []String;
    public var gzip:        Bool;
    public var ports:       PortConfiguration;
    public var timeouts:    TimeoutConfiguration;

    new() {
        this.push = [];
        this.gzip = true;
        this.ports = new PortConfiguration();
        this.timeouts = new TimeoutConfiguration();
    }

    public function reset() {
        this = new Configuration();
    }
}
/// PortConfiguration lets you configure the ports that Aero will listen on.
public model PortConfiguration {
    public var HTTP:    Int;
    public var HTTPS:   Int;

    new() {
        this.HTTP = 4000;
        this.HTTPS = 4001;
    }
}

/// TimeoutConfiguration lets you configure the different timeout durations.
public model TimeoutConfiguration {
    public var idle:        Duration;
    public var readHeader:  Duration;
    public var write:       Duration;
    public var shutdown:    Duration;   

    new() {
        this.idle = Second.times(180);
        this.write = Second.times(120);
        this.readHeader = Second.times(5);
        this.shutdown = Millisecond.times(250);
    }
}

public function loadConfig(path: String) -> Outcome<Configuration, fs.FsError> {
    file := fs.open(path).run().await()?;

    json := new json.Decoder(file).readToEnd()?.asObject();
    
    configuration := Configuration.fromJsonDecoder(decoder)?;
       
    file.close();
    todo()
}