module ref

use core.interfaces.Guaranteed
use core.internals.builtin



/// An intrinsic model that provides a way to hold a weak reference to a value of type `T`.
/// 
/// Unlike regular references, weak references don't prevent the underlying
/// value from being dropped by the runtime. This means that if the 
/// object is no longer reachable through other strong references, it will
/// be cleared and the WeakRef will point to empty memory.
public model WeakRef<T> implements Guaranteed<T> {

    /// Implementation of the Guaranteed interface.
    function [Guaranteed.guarantee] -> T {
        this.unwrap()
    }

    /// Forcefully retrieves the value in the reference.
    /// 
    /// It is useful when there is a surety that the value
    /// contained has not been dropped by the runtime.
    public function unwrap -> T {
        this.deref().unwrap()
    }    

    /// Retrieves the value in the reference.
    public function deref -> ?T {
        return builtin.deref(this)
    }

    /// Creates a weak reference to an object.
    public static function to(value: T) -> This {
        builtin.weakref(value)
    }
}