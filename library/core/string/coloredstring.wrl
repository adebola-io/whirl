module coloredstring

use core.sentinels.todo
use core.maybe.some
use core.numeric.Int32
use string.String
use display.Display

/// A string intended for display on a terminal, 
/// that may have custom colors and styles applied to it.
/// ### Constructor Arguments.
/// - @param (text?: String) The string to display.
public model ColoredString implements Display {
    public var text: String
    var codes: []Int32

    new(text?: String) {
        this.text = todo()
        // this.text = Maybe.unwrapOrDefault(text)
        this.codes = []
    }

    /// Changes the color of the terminal text to blue.
    public function blue -> This {
        todo()
    }

    ///
    public function red -> This {
        todo()
    }

    public function [Display.toStr] -> String {
        todo()
    }

    public static function from<T implements Display>(value: T) -> This {
        text := value.toStr()
        ColoredString(some(text))
    }
}